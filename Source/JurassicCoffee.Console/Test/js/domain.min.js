var Attractor, Bot, BotBuilder, Drag, EdgeBounce, EdgeWrap, Magnet, Mouse, Noise, Rnd, Spring, Vector;Drag = (function () { function a() { } a.k = 0.05; a.applyForce = function (b) { var c, d; d = b.velocity.mag(); c = b.velocity.get(); c.mult(-1); c.normalize(); c.mult(a.k * d * d); return b.accelerate(c) }; return a })(); EdgeBounce = (function () { function a() { } a.applyForce = function (b) { var c, d, e, f; c = b.location.x - window.width; d = b.location.x; if (c > 0) { b.accelerate(new Vector(-c, 0)) } if (d < 0) { b.accelerate(new Vector(-d, 0)) } e = b.location.y - window.height; f = b.location.y; if (e > 0) { b.accelerate(new Vector(0, -e)) } if (f < 0) { return b.accelerate(new Vector(0, -f)) } }; return a })(); EdgeWrap = (function () { function a() { } a.applyForce = function (b) { var c, d, e, f; c = b.location.x - window.width; d = b.location.x; if (c > 0) { b.location.x = 0 } if (d < 0) { b.location.x = window.width } e = b.location.y - window.height; f = b.location.y; if (e > 0) { b.location.y = 0 } if (f < 0) { return b.location.y = window.height } }; return a })(); Magnet = (function () { function a() { } a.isActive = true; a.k = 1; a.applyForce = function (b, c) { var d, e; if (!a.isActive) { return } e = Vector.sub(b.location, c.location); d = e.mag(); e.normalize(); e.mult((a.k * b.mass * c.mass) / (d * d)); return b.accelerate(e) }; return a })(); Mouse = (function () { function a() { } a.isActive = false; a.k = 0.7; a.applyForce = function (b) { var c, d, e; if (!a.isActive) { return } d = window.processing; e = new Vector(d.mouseX, d.mouseY); c = Vector.sub(e, b.location); c.normalize(); c.mult(a.k); return b.accelerate(c) }; return a })(); Noise = (function () { function a() { } a.chance = 0.5; a.scale = 2; a.applyForce = function (b) { var c, d; if (a.scale === 0 || Rnd.gate(100 - a.chance)) { return } c = Rnd.next(a.scale * b.mass) * Rnd.sign(); d = Rnd.next(a.scale * b.mass) * Rnd.sign(); return b.accelerate(new Vector(c, d)) }; return a })(); Spring = (function () { function a() { } a.isActive = true; a.k = 0.01; a.restLength = 50; a.applyForce = function (b, c) { var d, e, f; if (!Magnet.isActive) { return } f = Vector.sub(b.location, c.location); d = f.mag(); e = a.restLength - d; f.normalize(); f.mult(a.k * e); b.accelerate(f); f.mult(-1); return c.accelerate(f) }; return a })(); Attractor = (function () { a.isActive = true; function a() { this.p = window.processing; this.mass = 2; this.acceleration = new Vector; this.velocity = Rnd.velocity(); this.location = Rnd.location(); this.accelerationChance = 0 } a.prototype.move = function () { this.changeVector(); this.velocity.add(this.acceleration); this.velocity.limit(20); this.location.add(this.velocity); return this.acceleration.mult(0) }; a.prototype.changeVector = function () { var b, c; this.accelerationChance++; if (!Rnd.gate(this.accelerationChance / 10)) { return } this.accelerationChance = 0; b = Rnd.next(100) * Rnd.sign(); c = Rnd.next(100) * Rnd.sign(); return this.accelerate(new Vector(b, c)) }; a.prototype.drawShape = function () { this.p.pushMatrix(); this.p.translate(this.location.x, this.location.y); this.p.rotate(this.velocity.heading()); this.p.scale(0.5 + this.mass / 8); this.p.fill(255, 128, 128); this.p.stroke(255, 0, 0); this.p.triangle(-4, 4, 8, 0, -4, -4); return this.p.popMatrix() }; a.prototype.applyForce = function (b) { var c; c = Vector.sub(this.location, b.location); c.normalize(); return b.accelerate(c) }; a.prototype.accelerate = function (b) { return this.acceleration.add(Vector.div(b, this.mass)) }; return a })(); Bot = (function () { function a(b) { this.mass = b != null ? b : (Math.random() * 10) + 1; this.p = window.processing; this.acceleration = new Vector; this.velocity = Rnd.velocity(); this.location = Rnd.location(); this.friends = [] } a.prototype.drawShape = function () { this.p.pushMatrix(); this.p.translate(this.location.x, this.location.y); this.p.rotate(this.velocity.heading()); this.p.scale(0.5 + this.mass / 8); this.p.fill(128, 255, 128); this.p.stroke(0, 255, 0); this.p.triangle(-4, 4, 8, 0, -4, -4); return this.p.popMatrix() }; a.prototype.drawLines = function () { var e, b, c, d; this.p.pushMatrix(); this.p.stroke(75); d = this.friends; for (b = 0, c = d.length; b < c; b++) { e = d[b]; this.p.line(this.location.x, this.location.y, e.location.x, e.location.y) } return this.p.popMatrix() }; a.prototype.move = function () { this.velocity.add(this.acceleration); this.velocity.limit(10); this.location.add(this.velocity); return this.acceleration.mult(0) }; a.prototype.accelerate = function (b) { return this.acceleration.add(Vector.div(b, this.mass)) }; return a })(); BotBuilder = (function () { function a() { } a.flock = function (e, b) { var c, d, f; c = []; for (f = 0; 0 <= e ? f <= e : f >= e; 0 <= e ? f++ : f--) { d = (function () { var g; g = []; for (f = 0; 0 <= b ? f < b : f > b; 0 <= b ? f++ : f--) { g.push(new Bot(Rnd.next(3, 1))) } return g })(); c = c.concat(d) } return c }; a.graphSpokes = function () { var b, c, d; b = new Bot(4); c = (function () { var e; e = []; for (d = 0; d < 10; d++) { e.push(new Bot(4)) } return e })(); b.friends = c; return c.concat(b) }; a.graphSwarm = function () { var b, c, d, e; b = new Bot(6); c = (function () { var f; f = []; for (e = 0; e < 16; e++) { f.push(new Bot(4)) } return f })(); d = (function () { var f; f = []; for (e = 0; e < 24; e++) { f.push(new Bot(1)) } return f })(); b.friends = c.concat(d); return c.concat(b, d) }; a.graphMolecule = function () { var b, d, e, f, g, j, k, l, m; b = (function () { var c; c = []; for (m = 0; m < 6; m++) { c.push(new Bot(5)) } return c })(); e = (function () { var c; c = []; for (d = 0; d < 3; d++) { c.push(new Bot(3)) } return c })(); f = (function () { var c; c = []; for (d = 0; d < 2; d++) { c.push(new Bot(3)) } return c })(); g = (function () { var c; c = []; for (d = 0; d < 2; d++) { c.push(new Bot(3)) } return c })(); j = (function () { var c; c = []; for (d = 0; d < 2; d++) { c.push(new Bot(3)) } return c })(); k = (function () { var c; c = []; for (d = 0; d < 2; d++) { c.push(new Bot(3)) } return c })(); l = (function () { var c; c = []; for (d = 0; d < 3; d++) { c.push(new Bot(3)) } return c })(); b[0].friends = e.concat([b[1]]); b[1].friends = f.concat([b[2]]); b[2].friends = g.concat([b[3]]); b[3].friends = j.concat([b[4]]); b[4].friends = k.concat([b[5]]); b[5].friends = l; return b.concat(e, f, g, j, k, l) }; a.graphBlossom = function () { var b, c, d, e, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T; b = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(8)) } return i })(); c = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(4)) } return i })(); d = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(4)) } return i })(); e = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); f = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); g = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); h = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); j = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); k = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); l = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); m = (function () { var i; i = []; for (T = 0; T < 4; T++) { i.push(new Bot(2)) } return i })(); n = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); o = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); z = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); K = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); N = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); O = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); P = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); Q = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); R = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); S = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); p = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); q = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); r = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); s = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); t = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); u = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); v = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); w = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); x = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); y = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); A = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); B = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); C = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); D = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); E = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); F = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); G = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); H = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); I = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); J = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); L = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); M = (function () { var i; i = []; for (T = 0; T < 2; T++) { i.push(new Bot(1)) } return i })(); b[0].friends = c.concat(b[1]); b[1].friends = d.concat(b[0]); c[0].friends = e; c[1].friends = f; c[2].friends = g; c[3].friends = h; d[0].friends = j; d[1].friends = k; d[2].friends = l; d[3].friends = m; e[0].friends = n; e[1].friends = o; e[2].friends = z; e[3].friends = K; f[0].friends = N; f[1].friends = O; f[2].friends = P; f[3].friends = Q; g[0].friends = R; g[1].friends = S; g[2].friends = p; g[3].friends = q; h[0].friends = r; h[1].friends = s; h[2].friends = t; h[3].friends = u; j[0].friends = v; j[1].friends = w; j[2].friends = x; j[3].friends = y; k[0].friends = A; k[1].friends = B; k[2].friends = C; k[3].friends = D; l[0].friends = E; l[1].friends = F; l[2].friends = G; l[3].friends = H; m[0].friends = I; m[1].friends = J; m[2].friends = L; m[3].friends = M; return b.concat(c, d, e, f, g, h, j, k, l, m, n, o, z, K, N, O, P, Q, R, S, p, q, r, s, t, u, v, w, x, y, A, B, C, D, E, F, G, H, I, J, L, M) }; return a })(); Rnd = (function () { function a() { } a.gate = function (b) { var c; c = (Math.random() * 100) < b; return c }; a.next = function (b, c) { if (b == null) { b = 1 } if (c == null) { c = 0 } return (Math.random() * b) + c }; a.location = function () { return new Vector(a.next(window.width), a.next(window.height)) }; a.velocity = function () { return new Vector(a.next(20) * a.sign(), a.next(20) * a.sign()) }; a.sign = function () { if (a.gate(50)) { return 1 } else { return -1 } }; return a })(); Vector = (function () { function a(b, c, d) { this.x = b != null ? b : 0; this.y = c != null ? c : 0; this.z = d != null ? d : 0 } a.prototype.add = function (b) { this.x += b.x; this.y += b.y; return this.z += b.z }; a.prototype.get = function () { return new a(this.x, this.y, this.z) }; a.prototype.cross = function (b) { return new a(this.y * b.z - b.y * this.z, this.z * b.x - b.z * this.x, this.x * b.y - b.x * this.y) }; a.prototype.div = function (b) { var c; c = a.ensure(b); this.x /= c.x; this.y /= c.y; return this.z /= c.z }; a.prototype.dist = function (b) { var c; c = a.ensure(b); return a.dist(this, c) }; a.prototype.hypot = function (c, d) { if (c === 0) { return Math.abs(d) } else { return Math.abs(c) * Math.sqrt(1 + Math.pow(d / c, 2)) } }; a.prototype.dot = function (b) { return this.x * b.x + this.y * b.y + this.z * b.z }; a.prototype.heading = function () { return -Math.atan2(-this.y, this.x) }; a.prototype.limit = function (b, c) { var d; d = this.mag(); if ((b != null) && d > b) { this.normalize(); return this.mult(b) } else { if ((c != null) && d < c) { this.normalize(); return this.mult(c) } } }; a.prototype.mag = function () { return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z) }; a.prototype.mult = function (b) { var c; c = a.ensure(b); this.x *= c.x; this.y *= c.y; return this.z *= c.z }; a.prototype.normalize = function () { var b; b = this.mag(); if (b > 0) { return this.div(b) } }; a.prototype.set = function (c, d, e) { var b; return b = [c, d, e], this.x = b[0], this.y = b[1], this.z = b[2], b }; a.prototype.sub = function (b) { this.x -= b.z; this.y -= b.y; return this.z -= b.z }; a.prototype.toArray = function () { return [this.x, this.y, this.z] }; a.prototype.toString = function () { return "x:@x, y:@y, z:@z" }; a.add = function (b, c) { var d, e; d = a.ensure(b); e = a.ensure(c); return new a(d.x + e.x, d.y + e.y, d.z + e.z) }; a.sub = function (b, c) { var d, e; d = a.ensure(b); e = a.ensure(c); return new a(d.x - e.x, d.y - e.y, d.z - e.z) }; a.div = function (b, c) { var d, e; d = a.ensure(b); e = a.ensure(c); return new a(d.x / e.x, d.y / e.y, d.z / e.z) }; a.ensure = function (b) { if (typeof b === "number") { return new a(b, b, b) } else { return b } }; a.dist = function (f, g) { var d, e, c; c = [(f != null ? f.x : void 0) - (g != null ? g.x : void 0), (f != null ? f.y : void 0) - (g != null ? g.y : void 0)], d = c[0], e = c[1]; return this.hypot(d, e) }; a.hypot = function (c, d) { if (c === 0) { return Math.abs(d) } else { return Math.abs(c) * Math.sqrt(1 + Math.pow(d / c, 2)) } }; a.dot = function (b, c) { return b.dot(c) }; a.cross = function (b, c) { return b.cross(c) }; a.angleBetween = function (b, c) { return Math.acos(b.dot(c) / (b.mag() * c.mag())) }; return a })();